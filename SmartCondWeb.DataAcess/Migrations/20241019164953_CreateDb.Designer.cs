// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartCondWeb.DataAcess.ContextPersist;

#nullable disable

namespace SmartCondWeb.DataAcess.Migrations
{
    [DbContext(typeof(SmartCondContext))]
    [Migration("20241019164953_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SmartCondWeb.Domain.Animal.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Breeds")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ResidentId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.People.Homeowner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentificationDocument")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Homeowners");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.People.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentificationDocument")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UnitCodeResident")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.Things.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("HomeownerId")
                        .HasColumnType("int");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UnitNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HomeownerId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Building = "BLOCO 1",
                            UnitCode = "100100",
                            UnitNumber = "T1"
                        },
                        new
                        {
                            Id = 2,
                            Building = "BLOCO 1",
                            UnitCode = "100200",
                            UnitNumber = "T2"
                        },
                        new
                        {
                            Id = 3,
                            Building = "BLOCO 1",
                            UnitCode = "100300",
                            UnitNumber = "T3"
                        },
                        new
                        {
                            Id = 4,
                            Building = "BLOCO 1",
                            UnitCode = "100400",
                            UnitNumber = "T4"
                        },
                        new
                        {
                            Id = 5,
                            Building = "BLOCO 1",
                            UnitCode = "100500",
                            UnitNumber = "T5"
                        },
                        new
                        {
                            Id = 6,
                            Building = "BLOCO 1",
                            UnitCode = "101100",
                            UnitNumber = "11"
                        },
                        new
                        {
                            Id = 7,
                            Building = "BLOCO 1",
                            UnitCode = "101200",
                            UnitNumber = "12"
                        },
                        new
                        {
                            Id = 8,
                            Building = "BLOCO 1",
                            UnitCode = "101300",
                            UnitNumber = "13"
                        },
                        new
                        {
                            Id = 9,
                            Building = "BLOCO 1",
                            UnitCode = "101400",
                            UnitNumber = "14"
                        },
                        new
                        {
                            Id = 10,
                            Building = "BLOCO 1",
                            UnitCode = "101500",
                            UnitNumber = "15"
                        },
                        new
                        {
                            Id = 11,
                            Building = "BLOCO 1",
                            UnitCode = "101600",
                            UnitNumber = "16"
                        },
                        new
                        {
                            Id = 12,
                            Building = "BLOCO 1",
                            UnitCode = "102100",
                            UnitNumber = "21"
                        },
                        new
                        {
                            Id = 13,
                            Building = "BLOCO 1",
                            UnitCode = "102200",
                            UnitNumber = "22"
                        },
                        new
                        {
                            Id = 14,
                            Building = "BLOCO 1",
                            UnitCode = "102300",
                            UnitNumber = "23"
                        },
                        new
                        {
                            Id = 15,
                            Building = "BLOCO 1",
                            UnitCode = "102400",
                            UnitNumber = "24"
                        },
                        new
                        {
                            Id = 16,
                            Building = "BLOCO 1",
                            UnitCode = "102500",
                            UnitNumber = "25"
                        },
                        new
                        {
                            Id = 17,
                            Building = "BLOCO 1",
                            UnitCode = "102600",
                            UnitNumber = "26"
                        },
                        new
                        {
                            Id = 18,
                            Building = "BLOCO 1",
                            UnitCode = "103100",
                            UnitNumber = "31"
                        },
                        new
                        {
                            Id = 19,
                            Building = "BLOCO 1",
                            UnitCode = "103200",
                            UnitNumber = "32"
                        },
                        new
                        {
                            Id = 20,
                            Building = "BLOCO 1",
                            UnitCode = "103300",
                            UnitNumber = "33"
                        },
                        new
                        {
                            Id = 21,
                            Building = "BLOCO 1",
                            UnitCode = "103400",
                            UnitNumber = "34"
                        },
                        new
                        {
                            Id = 22,
                            Building = "BLOCO 1",
                            UnitCode = "103500",
                            UnitNumber = "35"
                        },
                        new
                        {
                            Id = 23,
                            Building = "BLOCO 1",
                            UnitCode = "103600",
                            UnitNumber = "36"
                        });
                });

            modelBuilder.Entity("SmartCondWeb.Domain.Things.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TagNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.Animal.Pet", b =>
                {
                    b.HasOne("SmartCondWeb.Domain.People.Resident", "Resident")
                        .WithMany("Pets")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.People.Resident", b =>
                {
                    b.HasOne("SmartCondWeb.Domain.Things.Unit", "Unit")
                        .WithMany("Residents")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.Things.Unit", b =>
                {
                    b.HasOne("SmartCondWeb.Domain.People.Homeowner", "Homeowner")
                        .WithMany("Units")
                        .HasForeignKey("HomeownerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Homeowner");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.Things.Vehicle", b =>
                {
                    b.HasOne("SmartCondWeb.Domain.Things.Unit", "Unit")
                        .WithMany("Vehicles")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.People.Homeowner", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.People.Resident", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("SmartCondWeb.Domain.Things.Unit", b =>
                {
                    b.Navigation("Residents");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
